@Controller
@RequestMapping("/modell")
@SessionAttributes("collectionForm")
@SuppressWarnings("unused")
public class SourceOfElectricityEquipment { 
	
	@Autowired
	private CompanyDAO companyDAO;
	
	@Autowired
	private CompanyCollectionSizeDAO companyCollectionSizeDAO;
	
	@Autowired
	private CompanyCollectionTypeDAO companyCollectionTypeDAO;
	
	@Autowired
	private CompanyCollectionOfModelsDAO companyCollectionOfModelsDAO;
	
	@Autowired
	@Qualifier("collectionFormValidator")
	private org.springframework.validation.Validator validator;
	    
	
	@RequestMapping(method = RequestMethod.GET)
	public String initForm(Model model) {
		CollectionForm collectionForm = new CollectionForm();
		model.addAttribute("collectionForm", collectionForm);
		initModelList(model);
		return "modell";
	}
	
	@RequestMapping(method = RequestMethod.POST)
	public String submitForm(@ModelAttribute("collectionForm")CollectionForm collectionForm, BindingResult result, @ModelAttribute("orderForm")OrderForm orderForm,@ModelAttribute("orderForm")OrderForm orderForm, Model model) {
		model.addAttribute("collectionForm", collectionForm);
		String returnVal = "order-page";
		new CollectionFormValidator().validate(collectionForm, result);
		if(result.hasErrors()) {
			initModelList(model);
			returnVal = "modell";
		} else {
			orderForm.setListOfResultSource( getSourceResult(collectionForm));
			model.addAttribute("orderForm",orderForm);
		}		
		return returnVal;
	}


	
	
	private void initModelList(Model model) {
		
		List<CompanyCollectionType> listType = companyCollectionTypeDAO.list();
		
		List<CompanyCollectionSize> listSize = companyCollectionSizeDAO.list();
		
		List<Company> listCompanys = companyDAO.list();
		
		model.addAttribute("listType", listType);
		
		model.addAttribute("listofcompanys", listCompanys);
		
		model.addAttribute("listSize", listSize);

	}
	
	
	private void initSourceResult(Model model, CollectionForm collectionForm){
		
		List<CompanyCollectionOfModel>listOfModellSourse = companyCollectionOfModelsDAO.getModels(collectionForm);
		model.addAttribute("listOfModellSourse", listOfModellSourse);
		
	}

}
